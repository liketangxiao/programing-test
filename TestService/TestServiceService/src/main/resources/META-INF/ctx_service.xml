<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:p="http://www.springframework.org/schema/p"  
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd 
    		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	<bean id="propertyConfigurer"  
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/datasource.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- data source dbcp  -->
	<bean id="dataSource_trade" class="yspay.trade.order.test.dao.DruidSecretBasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" 	  value="${trade.url}" />
		<property name="username" value="${trade.username}" />
		<property name="password" value="${trade.password}" />
		<property name="defaultAutoCommit" value="false"></property>
		<property name="initialSize" value="${trade.inisize}"/>
		<property name="maxActive" value="${trade.maxsize}"/>	
		<property name="minIdle" value="${trade.minidle}" />
		<property name="maxIdle" value="${trade.maxidle}" />
		<property name="validationQuery" value="select * from dual"/>
		<property name="testWhileIdle" value="false" /> 
		<property name="timeBetweenEvictionRunsMillis" value="600" />	
		
		<property name="filters" value="mergeStat,wall" />
	</bean>
	
	<!-- session factory -->
	<bean id="sessionFactory_trade" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource_trade"></property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:/yspay/trade/hbm/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle9iDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.ast.ASTQueryTranslatorFactory
				</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider 
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					false
				</prop>
			<!--
				 <prop key="hibernate.show_sql">false</prop>
				 <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			-->
			</props>
		</property>
	</bean>

	<!-- transaction -->
	<bean id="transactionManager_trade"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory_trade" />
		</property>
	</bean>
	
	<!-- <bean id="baseDao_trade" abstract="true">
		<property name="sessionFactory" ref="sessionFactory_trade"></property>
	</bean>
	
	<bean id="orderBillDao" class="yspay.trade.order.dao.hibernate.OrderBillDao" parent="baseDao_trade"></bean>
	<bean id="orderBillPayDetailDao" class="yspay.trade.order.dao.hibernate.OrderBillPayDetailDao" parent="baseDao_trade"></bean> -->

	<context:component-scan base-package="yspay.trade.order.test.service.impl" />
	<context:component-scan base-package="yspay.trade.order.test.dao.hibernate" />
	<context:component-scan base-package="yspay.trade.order.test.api" />
	
	<bean id="mapper" class="org.dozer.spring.DozerBeanMapperFactoryBean"></bean>
</beans>